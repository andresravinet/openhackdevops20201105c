name: POI CICD

env:
  poi_path: apis/poi/**
  registry: openhackxtl6mwz4acr
  repository:  devopsoh/api-poi
  docker_path: apis/poi/web
    

on:
  push:
    branches: [ master ]
    paths: 
      - apis/poi/**  
      - .github/workflows/poi.yml
  pull_request:
    branches: [ master ]
    paths: 
      - apis/poi/**
      - .github/workflows/poi.yml

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      
    - name: Add Code Coverage Tools
      working-directory: apis/poi/tests/UnitTests
      run: dotnet add package coverlet.msbuild

    - name: Install dependencies
      run: dotnet restore apis/poi/web/*.csproj
      
    - name: .NET Build Web
      run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

    - name: .NET Build Unit Tests
      run: dotnet build --configuration Release apis/poi/tests/UnitTests/UnitTests.csproj

    - name: .NET Test
      run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests  /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov
      
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
        base-path: apis/poi
        flag-name: Unit
      
  docker_build_and_push:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [build_and_test]
    steps:
      - uses: actions/checkout@v2
      
      - name: Docker login
        run: docker login $registry -u ${{ secrets.ACR_USER }} -p ${{ secrets.ACR_KEY }}
        
      - name: Docker build
        run: docker build -t $registry/$repository:${{github.run_number}} --build-arg build_version=${{github.run_number}} $docker_path
      
      - name: Docker push
        run: docker push $registry/$repository:${{github.run_number}}
  
